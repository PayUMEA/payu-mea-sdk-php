;## This is an example configuration file for the SDK.
;## The sample scripts configure the SDK dynamically
;## but you can choose to go for file based configuration
;## in simpler apps (See bootstrap.php for more).
[account]
account1.username = '100032';
account1.password = 'PypWWegU';
account1.safekey = '{CE62CE80-0EFD-4035-87C1-8824C5C46E7F}';
account1.store_id = '3D Sim Store FAuth Off Force On';
account1.payment_methods = 'CREDITCARD';

account2.username = 'Staging Integration Store 3';
account2.password = 'WSAUFbw6';
account2.safekey = '{07F70723-1B96-4B97-B891-7BF708594EEA}';
account2.store_id = 'Staging Integration Store 3';
account2.payment_methods = 'CREDITCARD,EBUCKS,EFT_PRO,DISCOVERYMILES';

account3.username = 'Staging Enterprise With Fraud Integration Store 1';
account3.password = 'xoV3PFor';
account3.safekey = '{CF86C6D5-016C-4E98-9E4F-0F4FE3A0C1BA}';
account3.store_id = 'Staging Enterprise With Fraud Integration Store 1';
account3.payment_methods = 'CREDITCARD';

account4.username = '200022';
account4.password = 'XSWYgMUA';
account4.safekey = '{826BD3C4-9663-48B0-804B-044BAA6A57F1}';
account4.store_id = 'Staging Integration Store 2';
account4.payment_methods = 'CREDITCARD';

account5.username = '200239';
account5.password = '5AlTRPoD';
account5.safekey = '{542595FF-78EC-4A42-996D-18F8790393E5}';
account5.store_id = 'Staging Integration Store (RTR)';
account5.payment_methods = 'CREDIT_CARD';

account7.username = '200239';
account7.password = '5AlTRPoD';
account7.safekey = '{07F70723-1B96-4B97-B891-7BF708594EEA';
account7.store_id = 'Staging Integration Store';
account7.payment_methods = 'CREDITCARD';

;Connection Information
[http]
; Add SOAPClient Constants to be configured
; The settings provided in configurations would override defaults
; if provided in configurations
http.connect_timeout = 30

;http.headers.PayU-Resource-Id = 123123123
;http.proxy_host = hostname
;http.proxy_port = port
;http.proxy_login = username
;http.proxy_password = password

;Service Configuration
[service]
; can be set to sandbox / live
mode = sandbox

;Logging Information
[log]
; For custom logging implementation, you can set the
; logging factory provider class here.
; The class should be implementing \PayUSdk\Log\PayULogFactory.
; If this is not set, it will default to \PayUSdk\Log\DefaultLogFactory.
;log.adapter_factory=\PayUSdk\Log\DefaultLogFactory

; Settings for DefaultLogFactory
log.log_enabled = true

; When using a relative path, the log file is created
; relative to the .php file that is the entry point
; for this request. You can also provide an absolute
; path here
; Settings for DefaultLogFactory
log.file_name = ../PayU.log

; Logging level can be one of any provided at \Psr\Log\LogLevel
; Logging is most verbose in the 'DEBUG' level and
; decreases as you proceed towards ERROR
; DEBUG level is disabled for live, to not log sensitive information.
; If the level is set to DEBUG, it will be reduced to INFO automatically
log.log_level = DEBUG

;Caching Configuration
[cache]
; If Cache is enabled, it stores the access token retrieved from ClientId and Secret from the
; server into a file provided by the cache.FileName option or by using
; the constant $CACHE_PATH value in PayU/Cache/AuthorizationCache if the option is omitted/empty.
; If the value is set to 'true', it would try to create a file and store the information.
; For any other value, it would disable it
; Please note, this is a very good performance improvement, and we would encourage you to
; set this up properly to reduce the number of calls, to almost 50% on normal use cases
; PLEASE NOTE: You may need to provide proper write permissions to /var directory under PayU-PHP-SDK on
; your hosting server or whichever custom directory you choose
;cache.enabled = false
; When using a relative path, the cache file is created
; relative to the .php file that is the entry point
; for this request. You can also provide an absolute
; path here
;cache.file_name = ../auth.cache
